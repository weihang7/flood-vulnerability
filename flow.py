import rasterio
import numpy as np
from rasterio.warp import calculate_default_transform, reproject, Resampling

dst_crs = 'EPSG:4326'
with rasterio.open('3m/cropped.tif') as src:
    affine, width, height = calculate_default_transform(
        src.crs, dst_crs, src.width, src.height, *src.bounds)
    kwargs = src.meta.copy()
    kwargs.update({
        'crs': dst_crs,
        'transform': affine,
        'width': width,
        'height': height
    })

    with rasterio.open('epsg.tif', 'w', **kwargs) as dst:
        for i in range(1, src.count + 1):
            reproject(
                source=rasterio.band(src, i),
                destination=rasterio.band(dst, i),
                src_transform=src.transform,
                src_crs=src.crs,
                dst_transform=affine,
                dst_crs=dst_crs,
                resampling=Resampling.nearest)
"""
with rasterio.open('moisture.tif') as dataset:
    arr = dataset.read(1, masked=False)
    print(np.sum(arr, axis=0))
    flow = np.empty(shape=(arr.shape[0], arr.shape[1]))
    flow.fill(20)
    flag = True
    while flag:
        flag = False
        new = np.empty(shape=(arr.shape[0], arr.shape[1]))
        it = np.nditer(flow, flags = ['multi_index'])
        while not it.finished:
            x, y = (it.multi_index[0], it.multi_index[1])
            if x % 10 == 0:
                print(x, y)
            max_dir = (x, y)
            for dx in range(-1, 2, 1):
                for dy in range(-1, 2, 1):
                    nx, ny = x + dx, y + dy
                    if 0 <= nx and nx < arr.shape[0] and 0 <= ny and ny < arr.shape[1]:
                        if arr[x, y] - arr[nx, ny] > arr[x, y] - arr[nx, ny] and arr[x, y] - arr[nx, ny] > 0:
                            max_dir = (nx, ny)
                            flag = True
            new[max_dir] = ALPHA * flow[x, y]
            it.iternext()
        flow = new
        print(np.count_nonzero(flow))
    print(flow)
"""
